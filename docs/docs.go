// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/groups": {
            "post": {
                "description": "Creates a new group in the database and returns its uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group"
                ],
                "summary": "Creating a new group",
                "parameters": [
                    {
                        "description": "Group number",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/v1.ResponseOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "$ref": "#/definitions/dto.CreateGroupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateGroupRequest": {
            "type": "object",
            "required": [
                "group"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "221-352"
                }
            }
        },
        "dto.CreateGroupResponse": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "954921ef-0d5c-11f0-91ca-20114d2008d9"
                }
            }
        },
        "v1.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "Error"
                }
            }
        },
        "v1.ResponseOK": {
            "type": "object",
            "properties": {
                "response": {},
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Raspyx",
	Description:      "API for schedules",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
